#!/bin/bash

# MateOS Smart Fix - Correcci√≥n inteligente de comandos
# Solo agrega variables de entorno sin sobrescribir funcionalidad

MATEOS_PATH="${MATEOS_PATH:-$HOME/.local/share/mateOS}"

# Cargar variables de entorno
if [ -f "$MATEOS_PATH/config/mateos-vars.sh" ]; then
    source "$MATEOS_PATH/config/mateos-vars.sh"
fi

# Colores para la salida
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para agregar variables de entorno de forma inteligente
add_env_vars_smart() {
    local cmd_path="$1"
    local cmd_name=$(basename "$cmd_path")
    
    echo "üîß Agregando variables de entorno a: $cmd_name"
    
    # Crear backup
    cp "$cmd_path" "$cmd_path.backup" 2>/dev/null
    
    # Verificar si ya tiene las variables de entorno
    if grep -q "mateos-vars.sh" "$cmd_path"; then
        echo "‚è≠Ô∏è  Ya tiene variables de entorno: $cmd_name"
        return 0
    fi
    
    # Crear archivo temporal con variables de entorno al inicio
    cat > "$cmd_path.tmp" << 'EOF'
#!/bin/bash

# Cargar variables de entorno centralizadas
MATEOS_PATH="${MATEOS_PATH:-$HOME/.local/share/mateOS}"
if [ -f "$MATEOS_PATH/config/mateos-vars.sh" ]; then
    source "$MATEOS_PATH/config/mateos-vars.sh"
fi

EOF
    
    # Agregar contenido original (saltando shebang si existe)
    if head -1 "$cmd_path" | grep -q "^#!/"; then
        tail -n +2 "$cmd_path" >> "$cmd_path.tmp"
    else
        cat "$cmd_path" >> "$cmd_path.tmp"
    fi
    
    # Reemplazar archivo original
    mv "$cmd_path.tmp" "$cmd_path"
    chmod +x "$cmd_path"
    
    echo "‚úÖ Variables de entorno agregadas a: $cmd_name"
}

# Funci√≥n para corregir un comando espec√≠fico
fix_command_smart() {
    local cmd_path="$1"
    local cmd_name=$(basename "$cmd_path")
    
    echo -e "${BLUE}üîß Corrigiendo: $cmd_name${NC}"
    
    # Solo agregar variables de entorno
    add_env_vars_smart "$cmd_path"
    
    echo -e "${GREEN}‚úÖ Comando corregido: $cmd_name${NC}"
}

# Funci√≥n para corregir todos los comandos
fix_all_commands_smart() {
    echo -e "${BLUE}üîß Corrigiendo comandos de MateOS de forma inteligente...${NC}"
    echo ""
    
    local total=0
    local fixed=0
    
    # Categor√≠as a procesar
    local categories=("system" "apps" "packages" "themes" "dev" "webapps" "utils")
    
    for category in "${categories[@]}"; do
        if [ -d "$MATEOS_PATH/bin/$category" ]; then
            echo -e "${BLUE}üìÅ Procesando categor√≠a: $category${NC}"
            
            for script in "$MATEOS_PATH/bin/$category"/mateos-*; do
                if [ -f "$script" ]; then
                    total=$((total + 1))
                    fix_command_smart "$script"
                    fixed=$((fixed + 1))
                    echo ""
                fi
            done
        fi
    done
    
    echo -e "${BLUE}üìä Resumen:${NC}"
    echo "  Total de comandos: $total"
    echo -e "  ${GREEN}Comandos corregidos: $fixed${NC}"
}

# Funci√≥n para restaurar desde backup
restore_from_backup() {
    echo -e "${YELLOW}üîÑ Restaurando desde backups...${NC}"
    
    local restored=0
    
    for category in system apps packages themes dev webapps utils; do
        if [ -d "$MATEOS_PATH/bin/$category" ]; then
            for script in "$MATEOS_PATH/bin/$category"/mateos-*; do
                if [ -f "$script" ] && [ -f "$script.backup" ]; then
                    mv "$script.backup" "$script"
                    restored=$((restored + 1))
                    echo "‚úÖ Restaurado: $(basename "$script")"
                fi
            done
        fi
    done
    
    echo "üìä Comandos restaurados: $restored"
}

# Funci√≥n para limpiar backups
clean_backups() {
    echo -e "${YELLOW}üßπ Limpiando archivos de backup...${NC}"
    
    local cleaned=0
    
    for category in system apps packages themes dev webapps utils; do
        if [ -d "$MATEOS_PATH/bin/$category" ]; then
            for backup in "$MATEOS_PATH/bin/$category"/*.backup; do
                if [ -f "$backup" ]; then
                    rm "$backup"
                    cleaned=$((cleaned + 1))
                fi
            done
        fi
    done
    
    echo "üìä Archivos de backup eliminados: $cleaned"
}

# Funci√≥n para mostrar ayuda
show_help() {
    echo "üîß MateOS Smart Fix - Correcci√≥n Inteligente de Comandos"
    echo ""
    echo "Uso: mateos-fix-smart <comando>"
    echo ""
    echo "Comandos:"
    echo "  all                     - Corregir todos los comandos (solo variables)"
    echo "  command <ruta>          - Corregir un comando espec√≠fico"
    echo "  restore                 - Restaurar desde backups"
    echo "  clean                   - Limpiar archivos de backup"
    echo "  help                    - Mostrar esta ayuda"
    echo ""
    echo "Ejemplos:"
    echo "  mateos-fix-smart all"
    echo "  mateos-fix-smart command /path/to/script"
    echo "  mateos-fix-smart restore"
    echo "  mateos-fix-smart clean"
}

# Funci√≥n principal
case "$1" in
    "all")
        fix_all_commands_smart
        ;;
    "command")
        if [ -z "$2" ]; then
            echo "‚ùå Se requiere ruta del comando"
            exit 1
        fi
        fix_command_smart "$2"
        ;;
    "restore")
        restore_from_backup
        ;;
    "clean")
        clean_backups
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo "‚ùå Comando desconocido: $1"
        show_help
        exit 1
        ;;
esac


